{"version":3,"sources":["reducers/documentReducer.js","reducers/index.js","actions/types.js","store.js","components/DocumentList/DocumentListItem.js","components/DocumentList/PaginationComponent.js","actions/documentActions.js","components/DocumentList/DocumentList.js","components/DocumentList/DocumentListFilter.js","components/DocumentList/DocumentContainer.js","App.js","index.js"],"names":["initialState","documents","filteredDocuments","statusFilterValue","typeFilterValue","numberFilterValue","clientNameFilterValue","startDateFilterValue","endDateFilterValue","totalWithoutVatFilterValue","combineReducers","state","action","type","payload","filtered","filter","doc","status","number","includes","docDate","Date","date","client_name","parseInt","total_w_vat","store","createStore","rootReducer","compose","window","__REDUX_DEVTOOLS_EXTENSION__","DocumentListItem","data-test","this","props","documentStatus","documentType","clientName","totalWithoutVat","Component","PaginationComponent","isFilterOpen","Pagination","PaginationItem","disabled","currentPage","PaginationLink","first","onClick","e","handlePageClick","previous","handlePreviousClick","numberOfPages","Array","map","_","i","key","active","href","next","handleNextClick","last","documentList","require","DocumentList","documentsLoaded","pagination","sliceStep","sliceStart","sliceEnd","setState","prevState","getDocuments","Math","ceil","length","Table","striped","responsive","bordered","slice","index","Collapse","isOpen","connect","DocumentListFilter","uuidv4","startDate","endDate","focusedInput","handleStatusChange","event","filterByStatus","target","value","applyDocumentFilters","handleTypeChange","filterByType","handleNumberChange","filterByNumber","handleClientNameChange","filterByClientName","handleTotalWithoutVatChange","filterByTotalWithoutVat","onDatesChange","isValid","filterByDate","resetDates","Row","Col","InputGroup","className","InputGroupAddon","addonType","InputGroupText","Input","name","onChange","placeholder","min","startDateId","endDateId","onFocusChange","displayFormat","isOutsideRange","filterValue","DocumentContainer","toggle","Container","style","marginTop","Button","color","block","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ee8202c.chunk.js","sourcesContent":["import {GET_DOCUMENTS,FILTER_BY_STATUS,FILTER_BY_TYPE,FILTER_BY_NUMBER,\r\n    FILTER_BY_CLIENT_NAME, FILTER_BY_DATE, FILTER_BY_TOTAL_WITHOUT_VAT,\r\n    APPLY_DOCUMENT_FILTERS}\r\n    from '../actions/types';\r\n\r\nconst initialState = {\r\n    documents: [],\r\n    filteredDocuments: [],\r\n    statusFilterValue: '',\r\n    typeFilterValue: '',\r\n    numberFilterValue: '',\r\n    clientNameFilterValue: '',\r\n    startDateFilterValue: null,\r\n    endDateFilterValue: null,\r\n    totalWithoutVatFilterValue: -1\r\n}\r\n\r\nexport default function(state = initialState,action){\r\n    switch(action.type){\r\n        case GET_DOCUMENTS:\r\n            return{\r\n                ...state,\r\n                documents: action.payload,\r\n                filteredDocuments: action.payload\r\n            }\r\n        case FILTER_BY_STATUS:\r\n            return{\r\n                ...state,\r\n                statusFilterValue: action.payload\r\n            }\r\n        case FILTER_BY_TYPE:\r\n            return{\r\n                ...state,\r\n                typeFilterValue: action.payload\r\n            }\r\n        case FILTER_BY_NUMBER:\r\n            return{\r\n                ...state,\r\n                numberFilterValue: action.payload\r\n            }\r\n        case FILTER_BY_CLIENT_NAME:\r\n            return{\r\n                ...state,\r\n                clientNameFilterValue: action.payload\r\n            }\r\n        //Payload[0] = start Date, Payload[1] = end Date\r\n        case FILTER_BY_DATE:\r\n            return{\r\n                ...state,\r\n                startDateFilterValue: action.payload[0],\r\n                endDateFilterValue: action.payload[1]\r\n            }\r\n        case FILTER_BY_TOTAL_WITHOUT_VAT:\r\n            return{\r\n                ...state,\r\n                totalWithoutVatFilterValue: action.payload\r\n            }\r\n        case APPLY_DOCUMENT_FILTERS:\r\n            var filtered = state.documents;\r\n            //filters by Status if there is a fiter Value\r\n            if(state.statusFilterValue !== ''){\r\n                filtered = filtered.filter(doc => doc.status === (state.statusFilterValue));\r\n            }\r\n            //filters by Type if there is a fiter Value\r\n            if(state.typeFilterValue !== ''){\r\n                filtered = filtered.filter(doc => doc.type === (state.typeFilterValue));\r\n            }\r\n            //filter by the number filter value\r\n            if(state.numberFilterValue !== ''){\r\n                filtered = filtered.filter(doc => doc.number.includes(state.numberFilterValue));\r\n            }\r\n            //checks if date is within filter date paramenters\r\n            if(state.startDateFilterValue !== null && state.endDateFilterValue !== null){\r\n                filtered = filtered.filter(doc => {var docDate = new Date(doc.date) \r\n                    return (docDate >= state.startDateFilterValue && \r\n                    docDate <= state.endDateFilterValue ? true: false)})\r\n            }\r\n            //filters by client name if there is a filter Value\r\n            if(state.clientNameFilterValue !== ''){\r\n                filtered = filtered.filter(doc => doc.client_name.includes(state.clientNameFilterValue))\r\n            }\r\n            if(state.totalWithoutVatFilterValue !== -1){\r\n                filtered = filtered.filter(doc => \r\n                    parseInt(doc.total_w_vat) === parseInt(state.totalWithoutVatFilterValue))\r\n            }\r\n\r\n            return{\r\n                ...state,\r\n                filteredDocuments: filtered\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers} from 'redux';\r\nimport documentReducer from './documentReducer';\r\n\r\n// Using combine reducers for scalability purposes\r\nexport default combineReducers({\r\n    documents: documentReducer\r\n})","//Document Actions\r\nexport const GET_DOCUMENTS = \"GET_DOCUMENTS\";\r\nexport const FILTER_BY_STATUS = \"FILTER_BY_STATUS\";\r\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\r\nexport const FILTER_BY_NUMBER = \"FILTER_BY_NUMBER\";\r\nexport const FILTER_BY_CLIENT_NAME = \"FILTER_BY_CLIENT_NAME\";\r\nexport const FILTER_BY_DATE = \"FILTER_BY_DATE\";\r\nexport const FILTER_BY_TOTAL_WITHOUT_VAT = \"FILTER_BY_TOTAL_WITHOUT_VAT\";\r\nexport const APPLY_DOCUMENT_FILTERS = \"APPLY_DOCUMENT_FILTERS\"","import {createStore, compose} from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(rootReducer, initialState,\r\n    compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ))\r\n\r\nexport default store;","import React, {Component} from 'react';\r\n\r\nclass DocumentListItem extends Component{\r\n\r\n    state = {}\r\n\r\n    render(){\r\n        return(\r\n            <tr>\r\n                <td data-test=\"ListItemData\">\r\n                    {this.props.documentStatus}\r\n                </td>\r\n                <td data-test=\"ListItemData\">\r\n                    {this.props.documentType}\r\n                </td>\r\n                <td data-test=\"ListItemData\">\r\n                    {this.props.number}\r\n                </td>\r\n                <td data-test=\"ListItemData\" >\r\n                    {this.props.clientName}\r\n                </td>\r\n                <td data-test=\"ListItemData\">\r\n                    {this.props.date}\r\n                </td>\r\n                <td data-test=\"ListItemData\">\r\n                    {this.props.totalWithoutVat}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DocumentListItem","import React, {Component} from 'react';\r\nimport { Pagination, PaginationItem, PaginationLink,} from 'reactstrap';\r\n\r\nclass PaginationComponent extends Component{\r\n\r\n    state = {\r\n        isFilterOpen: false\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Pagination data-test=\"PaginationWrapper\">\r\n                    <PaginationItem disabled={this.props.currentPage <= 0} data-test=\"FirstPage\">\r\n                        <PaginationLink first onClick={e=> this.props.handlePageClick(e,0)}/>\r\n                    </PaginationItem>\r\n                    <PaginationItem disabled={this.props.currentPage <= 0} data-test=\"PreviousPage\">\r\n                        <PaginationLink previous onClick={e=> this.props.handlePreviousClick(e)} />\r\n                    </PaginationItem>\r\n                    {\r\n                    this.props.numberOfPages > 0 ?\r\n                    [...Array(this.props.numberOfPages)].map((_, i) => (\r\n                    <PaginationItem key={i} active={i === this.props.currentPage} data-test=\"SelectPage\"> \r\n                        <PaginationLink onClick={e=> this.props.handlePageClick(e,i)} href=\"#\">\r\n                            {i + 1}\r\n                        </PaginationLink>\r\n                    </PaginationItem>   \r\n                    ))\r\n                    :\r\n                    null\r\n                    }\r\n\r\n                    <PaginationItem disabled={this.props.currentPage >= this.props.numberOfPages-1} data-test=\"NextPage\">\r\n                        <PaginationLink next onClick={e=> this.props.handleNextClick(e)} />\r\n                    </PaginationItem>\r\n                    <PaginationItem disabled={this.props.currentPage >= this.props.numberOfPages-1} data-test=\"LastPage\">\r\n                        <PaginationLink last onClick={e=> \r\n                            this.props.handlePageClick(e,this.props.numberOfPages-1)} />\r\n                    </PaginationItem>\r\n                </Pagination>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaginationComponent","import {GET_DOCUMENTS,FILTER_BY_STATUS,FILTER_BY_TYPE,FILTER_BY_NUMBER,\r\n    FILTER_BY_CLIENT_NAME, FILTER_BY_DATE, FILTER_BY_TOTAL_WITHOUT_VAT,\r\n    APPLY_DOCUMENT_FILTERS}\r\n    from '../actions/types';\r\n\r\nconst documentList = require(\"../data/documents.json\");\r\n\r\n//This is where the API Call would be implemented\r\nexport const getDocuments = () => {\r\n    return{\r\n        type: GET_DOCUMENTS,\r\n        payload: documentList.documents\r\n    }\r\n}\r\n\r\nexport const filterByStatus = (filterValue) => {\r\n    return{\r\n        type: FILTER_BY_STATUS,\r\n        payload: filterValue\r\n    }\r\n}\r\n\r\nexport const filterByType = (filterValue) => {\r\n    return{\r\n        type: FILTER_BY_TYPE,\r\n        payload: filterValue\r\n    }\r\n}\r\n\r\nexport const filterByNumber = (filterValue) =>{\r\n    return{\r\n        type: FILTER_BY_NUMBER,\r\n        payload: filterValue\r\n    }\r\n}\r\n\r\nexport const filterByClientName = (filterValue) =>{\r\n    return{\r\n        type: FILTER_BY_CLIENT_NAME,\r\n        payload: filterValue\r\n    }\r\n}\r\n\r\nexport const filterByDate = (startDate, endDate) =>{\r\n    return{\r\n        type: FILTER_BY_DATE,\r\n        payload: [startDate,endDate]\r\n    }\r\n}\r\n\r\nexport const filterByTotalWithoutVat = (filterValue) =>{\r\n    return{\r\n        type: FILTER_BY_TOTAL_WITHOUT_VAT,\r\n        payload: filterValue\r\n    }\r\n}\r\n\r\nexport const applyDocumentFilters = () => {\r\n    return{\r\n        type: APPLY_DOCUMENT_FILTERS\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Table, Collapse} from 'reactstrap';\r\n\r\nimport DocumentListItem from './DocumentListItem';\r\nimport PaginationComponent from './PaginationComponent';\r\nimport {getDocuments} from '../../actions/documentActions';\r\n\r\nclass DocumentList extends Component{\r\n\r\n    state = {\r\n        documentsLoaded: false,\r\n        pagination:{\r\n            sliceStep: 7,\r\n            sliceStart: 0,\r\n            sliceEnd: 7,\r\n            numberOfPages: 0,\r\n            currentPage: 0,\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        //calls the action in order to get the list of documents\r\n        if(!this.state.documentsLoaded){\r\n            this.props.getDocuments();\r\n            this.setState({documentsLoaded:true})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        //Checks if the number of pages has changed from an update\r\n        //this solution does not scale well, \r\n        //a better solution would be if the documents file had a size variable\r\n        //in that case it's not needed to iterate the array every tyme\r\n        var numberOfPages = Math.ceil(this.props.documents.filteredDocuments.length / 7)\r\n        if(numberOfPages !== this.state.pagination.numberOfPages){\r\n            this.setState(prevState => ({pagination:{\r\n                ...prevState.pagination,\r\n                numberOfPages\r\n            }}))\r\n        }\r\n    }\r\n\r\n    //Handles a pagination button click event\r\n    handlePageClick = (e,i) => {\r\n        this.setState(prevState => ({pagination:{\r\n            ...prevState.pagination,\r\n            currentPage: i,\r\n            sliceStart: i * prevState.pagination.sliceStep,\r\n            sliceEnd: (i+1) * prevState.pagination.sliceStep\r\n        }}))\r\n    }\r\n\r\n    //Handles the previous page button click event\r\n    handlePreviousClick = (e)=>{\r\n        this.setState(prevState => ({pagination:{\r\n            ...prevState.pagination,\r\n            currentPage: prevState.pagination.currentPage-1,\r\n            sliceStart: (prevState.pagination.currentPage-1) * prevState.pagination.sliceStep,\r\n            sliceEnd: prevState.pagination.currentPage * prevState.pagination.sliceStep\r\n        }}))\r\n    }\r\n\r\n    //Handles the next page button click event\r\n    handleNextClick = (e)=>{\r\n        this.setState(prevState => ({pagination:{\r\n            ...prevState.pagination,\r\n            currentPage: prevState.pagination.currentPage+1,\r\n            sliceStart: (prevState.pagination.currentPage+1) * prevState.pagination.sliceStep,\r\n            sliceEnd: (prevState.pagination.currentPage+2) * prevState.pagination.sliceStep\r\n        }}))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <Table striped responsive bordered data-test=\"DocumentTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Document status</th>\r\n                        <th>Document type</th>\r\n                        <th>Number</th>\r\n                        <th>Client name</th>\r\n                        <th>Date</th>\r\n                        <th>Total without VAT</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.documents.filteredDocuments\r\n                    .slice(this.state.pagination.sliceStart,this.state.pagination.sliceEnd)\r\n                    .map(({status,type,number,client_name,date,total_w_vat},index) => \r\n                        <DocumentListItem \r\n                        key={index}\r\n                        documentStatus={status}\r\n                        documentType={type}\r\n                        number={number}\r\n                        clientName={client_name}\r\n                        date={date}\r\n                        totalWithoutVat={total_w_vat}\r\n                    />\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n            <Collapse isOpen={this.state.pagination.numberOfPages !== 0} data-test=\"PaginationCollapse\">\r\n            <PaginationComponent \r\n                numberOfPages={this.state.pagination.numberOfPages}\r\n                currentPage={this.state.pagination.currentPage}\r\n                handlePageClick={this.handlePageClick}\r\n                handlePreviousClick={this.handlePreviousClick}\r\n                handleNextClick={this.handleNextClick}\r\n            />\r\n            </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    documents: state.documents,\r\n})\r\n\r\nexport default connect(mapStateToProps,{getDocuments})(DocumentList)","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {InputGroup, InputGroupAddon, InputGroupText, Input, Row, Col} from 'reactstrap';\r\nimport { DateRangePicker } from 'react-dates';\r\n\r\nimport {filterByStatus, filterByType, filterByNumber,\r\n    filterByDate, filterByClientName, filterByTotalWithoutVat,\r\n     applyDocumentFilters} from '../../actions/documentActions';\r\n\r\nclass DocumentListFilter extends Component{\r\n\r\n    //Used to generate an unique ID\r\n    uuidv4 = require('uuid/v4');\r\n\r\n    state = {\r\n        documentStatus: [\"\",\"Draft\", \"Final\", \"Paid\", \"Cancelled\"],\r\n        documentType: [\"\",\"Invoice\", \"Invoice-Receipt\", \"Receipt\"],\r\n        startDate:null,\r\n        endDate:null,\r\n        focusedInput:null\r\n    }\r\n\r\n    //FILTER HANDLERS\r\n    handleStatusChange = (event) => {\r\n        this.props.filterByStatus(event.target.value);\r\n        this.props.applyDocumentFilters();\r\n    }\r\n\r\n    handleTypeChange = (event) => {\r\n        this.props.filterByType(event.target.value);\r\n        this.props.applyDocumentFilters();\r\n    }\r\n\r\n    handleNumberChange = (event) => {\r\n        this.props.filterByNumber(event.target.value);\r\n        this.props.applyDocumentFilters();\r\n    }\r\n\r\n    handleClientNameChange = (event) => {\r\n        this.props.filterByClientName(event.target.value);\r\n        this.props.applyDocumentFilters();\r\n    }\r\n\r\n    handleTotalWithoutVatChange = (event) => {\r\n        //-1 means no filter selected\r\n        if(event.target.value === \"\")\r\n            this.props.filterByTotalWithoutVat(-1);\r\n        else\r\n            this.props.filterByTotalWithoutVat(event.target.value);\r\n        this.props.applyDocumentFilters();\r\n    }\r\n\r\n    onDatesChange = ({startDate, endDate}) => {\r\n        this.setState({ startDate, endDate })\r\n        if(!startDate || !endDate) \r\n            return;\r\n        if(!startDate.isValid() || !endDate.isValid())\r\n            return;\r\n        this.props.filterByDate(startDate,endDate);\r\n        this.props.applyDocumentFilters();\r\n    }\r\n\r\n    //FILTER RESETERS\r\n    resetDates = () => {\r\n        this.setState({startDate: null, endDate: null})\r\n        this.props.filterByDate(null,null);\r\n        this.props.applyDocumentFilters();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Row data-test=\"DocListFilterWrapper\">\r\n                    <Col>\r\n                    <InputGroup className=\"Status Filter\" data-test=\"DocListFilterInputGroup\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                                Document Status\r\n                            </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input type=\"select\" name=\"status\" onChange={this.handleStatusChange}>\r\n                            {this.state.documentStatus.map( (status) =>\r\n                                <option key={\"status\" + status}>\r\n                                    {status}\r\n                                </option>\r\n                            )}\r\n                        </Input>\r\n                    </InputGroup>\r\n                    </Col>\r\n                    <br />\r\n                    <Col>\r\n                    <InputGroup  className=\"Type Filter\" data-test=\"DocListFilterInputGroup\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                                Document Type\r\n                            </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input type=\"select\" name=\"type\" onChange={this.handleTypeChange}>\r\n                            {this.state.documentType.map( (type) =>\r\n                                <option key={\"type\" + type}>\r\n                                    {type}\r\n                                </option>\r\n                            )}\r\n                        </Input> \r\n                    </InputGroup>\r\n                    </Col>\r\n                    <br />\r\n                    <Col>\r\n                    <InputGroup className=\"Number Filter\" data-test=\"DocListFilterInputGroup\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                            Document Number\r\n                            </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input placeholder=\"Ex: 2018/11\" onChange={this.handleNumberChange}/>\r\n                    </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <br />\r\n                <Row>\r\n                <Col>\r\n                <InputGroup data-test=\"DocListFilterInputGroup\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                           Client Name\r\n                        </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"António Fernandes\" onChange={this.handleClientNameChange}/>\r\n                </InputGroup>  \r\n                </Col>              \r\n                <br />\r\n                <Col>\r\n                <InputGroup data-test=\"DocListFilterInputGroup\">\r\n                <InputGroupAddon addonType=\"prepend\"> \r\n                    <InputGroupText>Total without VAT</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input placeholder=\"Amount\" min={0} type=\"number\" onChange={this.handleTotalWithoutVatChange}/>\r\n                </InputGroup>\r\n                </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                <Col>\r\n                <InputGroup data-test=\"DocListFilterInputGroup\">\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                           Date\r\n                        </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <DateRangePicker \r\n                    startDate={this.state.startDate}\r\n                    startDateId={this.uuidv4()}\r\n                    endDate={this.state.endDate}\r\n                    endDateId={this.uuidv4()}\r\n                    focusedInput={this.state.focusedInput}\r\n                    onDatesChange={this.onDatesChange}\r\n                    onFocusChange={focusedInput => this.setState({ focusedInput })}\r\n                    displayFormat=\"YYYY/MM/DD\"\r\n                    isOutsideRange={() => false}\r\n                    />\r\n                <InputGroupAddon addonType=\"append\"> \r\n                    <InputGroupText onClick={ () => this.resetDates()}>X</InputGroupText>\r\n                </InputGroupAddon>\r\n                </InputGroup>\r\n                <br />\r\n                </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{filterByStatus, filterByType, filterByClientName, filterByTotalWithoutVat, filterByNumber,filterByDate, applyDocumentFilters})\r\n(DocumentListFilter)","import React, {Component} from 'react';\r\nimport {Collapse, Button, Container } from 'reactstrap';\r\nimport DocumentList from './DocumentList';\r\nimport DocumentListFilter from './DocumentListFilter';\r\n\r\nclass DocumentContainer extends Component{\r\n\r\n    state = {\r\n        isFilterOpen: false\r\n    }\r\n\r\n    //Toggles the Colapse containing the Filter Input Group\r\n    toggle = () => {\r\n        this.setState({isFilterOpen: !this.state.isFilterOpen})\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container style={{marginTop: \"2rem\"}} data-test=\"DocContainerComponent\">\r\n                <Button color=\"primary\" onClick={this.toggle} block\r\n                data-test=\"ShowFilterButton\"\r\n                > Show Filter </Button>\r\n                <br />\r\n                <Collapse data-test=\"CollapseFilter\" isOpen={this.state.isFilterOpen}>\r\n                    <br />\r\n                    <div data-test=\"DocumentListFilterWrapper\">\r\n                    <DocumentListFilter />\r\n                    </div>\r\n                </Collapse>\r\n                \r\n                <div data-test=\"DocumentList\">\r\n                <DocumentList />\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DocumentContainer","import React, {Component} from 'react';\n\nimport {Provider} from 'react-redux';\nimport store from './store'\nimport DocumentContainer from './components/DocumentList/DocumentContainer'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends Component{\n\n  render(){\n    return(\n      <Provider store={store}>\n        <DocumentContainer/>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}